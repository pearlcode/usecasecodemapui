// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`usecaseForm should render the usecaseForm 1`] = `
ReactWrapper {
  Symbol(enzyme.__unrendered__): <UsecaseForm
    clickCloseNewUsecase={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "clickCloseNewUsecase": [MockFunction],
    },
    "ref": null,
    "rendered": Object {
      "instance": <div>
        <div>
          New Usecase Form
        </div>
        <button
          class="usecase-form_close-button"
          type="button"
        >
          cancel
        </button>
      </div>,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div>
            New Usecase Form
          </div>,
          <button
            className="usecase-form_close-button"
            onClick={[Function]}
            type="button"
          >
            cancel
          </button>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <div>
            New Usecase Form
          </div>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "New Usecase Form",
          },
          "ref": null,
          "rendered": Array [
            "New Usecase Form",
          ],
          "type": "div",
        },
        Object {
          "instance": <button
            class="usecase-form_close-button"
            type="button"
          >
            cancel
          </button>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "cancel",
            "className": "usecase-form_close-button",
            "onClick": [Function],
            "type": "button",
          },
          "ref": null,
          "rendered": Array [
            "cancel",
          ],
          "type": "button",
        },
      ],
      "type": "div",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "clickCloseNewUsecase": [MockFunction],
      },
      "ref": null,
      "rendered": Object {
        "instance": <div>
          <div>
            New Usecase Form
          </div>
          <button
            class="usecase-form_close-button"
            type="button"
          >
            cancel
          </button>
        </div>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div>
              New Usecase Form
            </div>,
            <button
              className="usecase-form_close-button"
              onClick={[Function]}
              type="button"
            >
              cancel
            </button>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <div>
              New Usecase Form
            </div>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "New Usecase Form",
            },
            "ref": null,
            "rendered": Array [
              "New Usecase Form",
            ],
            "type": "div",
          },
          Object {
            "instance": <button
              class="usecase-form_close-button"
              type="button"
            >
              cancel
            </button>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "cancel",
              "className": "usecase-form_close-button",
              "onClick": [Function],
              "type": "button",
            },
            "ref": null,
            "rendered": Array [
              "cancel",
            ],
            "type": "button",
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
